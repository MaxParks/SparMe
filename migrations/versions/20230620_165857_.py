"""empty message

Revision ID: 589a0d60b22d
Revises: ffdc0a98111c
Create Date: 2023-06-20 16:58:57.161228

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '589a0d60b22d'
down_revision = 'ffdc0a98111c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gyms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('martial_art', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('message_text', sa.String(length=800), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('partner_id', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.Column('session_type', sa.String(length=100), nullable=False),
    sa.Column('session_date', sa.DateTime(), nullable=False),
    sa.Column('details', sa.String(length=800), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['partner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_gym',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gym_id'], ['gyms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('review_text', sa.String(length=800), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

        with op.batch_alter_table('users', schema=SCHEMA) as batch_op:
            batch_op.add_column(sa.Column('firstName', sa.String(length=255), nullable=False))
            batch_op.add_column(sa.Column('lastName', sa.String(length=255), nullable=False))
            batch_op.add_column(sa.Column('experience', sa.Integer(), nullable=False))
            batch_op.add_column(sa.Column('city', sa.String(length=255), nullable=False))
            batch_op.add_column(sa.Column('weight', sa.Float(), nullable=False))
            batch_op.add_column(sa.Column('height', sa.Float(), nullable=False))
            batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
            batch_op.drop_column('username')
            batch_op.drop_column('hashed_password')

    else:
        with op.batch_alter_table('users', schema=None) as batch_op:
            batch_op.add_column(sa.Column('firstName', sa.String(length=255), nullable=False))
            batch_op.add_column(sa.Column('lastName', sa.String(length=255), nullable=False))
            batch_op.add_column(sa.Column('experience', sa.Integer(), nullable=False))
            batch_op.add_column(sa.Column('city', sa.String(length=255), nullable=False))
            batch_op.add_column(sa.Column('weight', sa.Float(), nullable=False))
            batch_op.add_column(sa.Column('height', sa.Float(), nullable=False))
            batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
            batch_op.drop_column('username')
            batch_op.drop_column('hashed_password')



    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

        with op.batch_alter_table('users', schema=SCHEMA) as batch_op:
            batch_op.add_column(sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=False))
            batch_op.add_column(sa.Column('username', sa.VARCHAR(length=40), nullable=False))
            batch_op.drop_column('updated_at')
            batch_op.drop_column('created_at')
            batch_op.drop_column('height')
            batch_op.drop_column('weight')
            batch_op.drop_column('city')
            batch_op.drop_column('experience')
            batch_op.drop_column('lastName')
            batch_op.drop_column('firstName')
    else:
        with op.batch_alter_table('users', schema=None) as batch_op:
            batch_op.add_column(sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=False))
            batch_op.add_column(sa.Column('username', sa.VARCHAR(length=40), nullable=False))
            batch_op.drop_column('updated_at')
            batch_op.drop_column('created_at')
            batch_op.drop_column('height')
            batch_op.drop_column('weight')
            batch_op.drop_column('city')
            batch_op.drop_column('experience')
            batch_op.drop_column('lastName')
            batch_op.drop_column('firstName')


    op.drop_table('reviews')
    op.drop_table('user_gym')
    op.drop_table('sessions')
    op.drop_table('messages')
    op.drop_table('gyms')
    # ### end Alembic commands ###
